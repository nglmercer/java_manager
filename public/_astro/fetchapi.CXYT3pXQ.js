class b{constructor(){this.parsers=[],this.registerDefaultParsers()}registerParser(e){this.parsers.push(e),this.parsers.sort((t,r)=>t.priority-r.priority)}removeParser(e){const t=this.parsers.findIndex(r=>r.name===e);return t!==-1?(this.parsers.splice(t,1),!0):!1}safeParse(e){if(e==null||typeof e!="string")return{success:!0,value:e,type:typeof e};const t=e.trim();if(!t)return{success:!0,value:t,type:"string"};for(const r of this.parsers)if(r.canParse(t))try{return{success:!0,value:r.parse(t),type:r.name}}catch(n){console.warn(`Parser '${r.name}' falló:`,n);continue}return{success:!0,value:t,type:"string"}}registerDefaultParsers(){this.registerParser({name:"json-strict",priority:1,canParse:e=>e.startsWith("{")&&e.endsWith("}")||e.startsWith("[")&&e.endsWith("]"),parse:e=>JSON.parse(e)}),this.registerParser({name:"json-sloppy",priority:2,canParse:e=>e.includes("{")||e.includes("[")||e.includes(":")||e.includes(","),parse:e=>{let t=e;return t=t.replace(/([{,]\s*)([a-zA-Z0-9_$]+)\s*:/g,'$1"$2":'),t=t.replace(/:\s*'([^']*)'/g,': "$1"'),t=t.replace(/:\s*([a-zA-Z][a-zA-Z0-9_]*)\s*([,}])/g,': "$1"$2'),t=t.replace(/,\s*([}\]])/g,"$1"),t.includes(":")&&!t.trim().startsWith("{")&&(t=`{${t}}`),JSON.parse(t)}}),this.registerParser({name:"number",priority:3,canParse:e=>/^-?\d*\.?\d+([eE][+-]?\d+)?$/.test(e),parse:e=>{const t=Number(e);if(isNaN(t))throw new Error("No es un número válido");return t}}),this.registerParser({name:"boolean",priority:4,canParse:e=>{const t=e.toLowerCase();return t==="true"||t==="false"||t==="yes"||t==="no"||t==="on"||t==="off"||t==="1"||t==="0"},parse:e=>{const t=e.toLowerCase();return t==="true"||t==="yes"||t==="on"||t==="1"}}),this.registerParser({name:"date-iso",priority:5,canParse:e=>/^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d{3})?Z?)?$/.test(e),parse:e=>new Date(e)}),this.registerParser({name:"url",priority:6,canParse:e=>{try{return new URL(e),!0}catch{return!1}},parse:e=>new URL(e)}),this.registerParser({name:"csv-array",priority:7,canParse:e=>e.includes(",")&&!e.includes("{")&&!e.includes("["),parse:e=>e.split(",").map(t=>{const r=t.trim();return this.safeParse(r).value})}),this.registerParser({name:"null",priority:8,canParse:e=>{const t=e.toLowerCase();return t==="null"||t==="undefined"||t==="none"},parse:e=>e.toLowerCase()==="undefined"?void 0:null})}parse(e){return this.safeParse(e).value}getRegisteredParsers(){return this.parsers.map(e=>e.name)}}const O=new b;function p(s){return O.parse(s)}class q{constructor(){this.config={enabled:!1,url:"",timeout:3e4}}update(e){this.config={...this.config,...e}}get(){return{...this.config}}isEnabled(){return this.config.enabled&&!!this.config.url}getAuthHeaders(){return this.config.auth?{"Proxy-Authorization":`Basic ${btoa(`${this.config.auth.username}:${this.config.auth.password}`)}`}:{}}getProxyUrl(){return this.config.url}getTimeout(){return this.config.timeout||3e4}}const a=new q;async function x(s,e="json"){if(s.status===204)return Promise.resolve(void 0);switch(e){case"blob":return s.blob();case"text":return s.text();case"arrayBuffer":return s.arrayBuffer();case"json":default:const t=await s.text();if(!t)return Promise.resolve(void 0);try{return p(t)}catch(r){return console.error("Falló el análisis de la respuesta:",r),Promise.reject(new Error("La respuesta no pudo ser analizada."))}}}function g(s,e={}){const{useProxy:t=a.isEnabled(),proxyConfig:r,...n}=e;if(!t)return[s,n];if(r){const o=a.get();a.update(r);const i=v(s,n);return a.update(o),i}return v(s,n)}function L(s){if(!s)return{};if(s instanceof Headers){const e={};return s.forEach((t,r)=>{e[r]=t}),e}if(Array.isArray(s)){const e={};return s.forEach(([t,r])=>{e[t]=r}),e}return s}function v(s,e){if(!a.isEnabled())return[s,e];const t=a.getProxyUrl(),r=a.getAuthHeaders(),n=L(e.headers),o=t,i={...e,headers:{...n,...r,"X-Proxy-Target":`${encodeURIComponent(s)}`},signal:AbortSignal.timeout(a.getTimeout())};return[o,i]}async function d(s,e,t="json"){try{const r=await s();return await x(r,t)}catch(r){if(e){console.warn("Error con proxy, intentando sin proxy:",r);try{const n=await e();return await x(n,t)}catch(n){throw console.error("Error también sin proxy:",n),n}}throw r}}const R={get:(s,e={})=>{const{responseType:t="json",...r}=e,[n,o]=g(s,{...r,method:"GET"}),i=()=>fetch(n,o),u=e.useProxy!==!1?()=>fetch(s,{...r,method:"GET"}):void 0;return d(i,u,t)},post:(s,e={},t={})=>{let r={...t,method:"POST"};if(e instanceof FormData){const l={};t.headers&&Object.entries(t.headers).forEach(([w,S])=>{w.toLowerCase()!=="content-type"&&(l[w]=S)}),r={...r,headers:l,body:e}}else{const l={"Content-Type":"application/json",...t.headers};r={...r,headers:l,body:JSON.stringify(e)}}const[n,o]=g(s,r),i=()=>fetch(n,o),u=t.useProxy!==!1?()=>fetch(s,r):void 0;return d(i,u)},put:(s,e={},t={})=>{const r={"Content-Type":"application/json",...t.headers},n={...t,method:"PUT",headers:r,body:JSON.stringify(e)},[o,i]=g(s,n),u=()=>fetch(o,i),l=t.useProxy!==!1?()=>fetch(s,n):void 0;return d(u,l)},patch:(s,e={},t={})=>{const r={"Content-Type":"application/json",...t.headers},n={...t,method:"PATCH",headers:r,body:JSON.stringify(e)},[o,i]=g(s,n),u=()=>fetch(o,i),l=t.useProxy!==!1?()=>fetch(s,n):void 0;return d(u,l)},delete:(s,e={})=>{const[t,r]=g(s,{...e,method:"DELETE"}),n=()=>fetch(t,r),o=e.useProxy!==!1?()=>fetch(s,{...e,method:"DELETE"}):void 0;return d(n,o)}},c={host:"127.0.0.1",port:3e3,protocol:"http",getFullUrl(){return`${this.protocol}://${this.host}:${this.port}`},update(s){Object.assign(this,s),console.log("API config updated:",this.getFullUrl())},proxy:void 0},$={getItem:()=>null,setItem:()=>{},removeItem:()=>{},clear:()=>{},length:0,key:()=>null},f=typeof window<"u"&&window.localStorage||$;class h{constructor(e){this.config=e,this.http=R;const t=p(f.getItem("info"))||{};this.token=t.token||f.getItem("token")||void 0,this.user=p(t.user||p(f.getItem("user")))||{},this.initializeProxy()}initializeProxy(){this.config.proxy&&a.update(this.config.proxy)}get host(){return this.config.getFullUrl()}updateConfig(e){this.config.update(e),e.proxy&&a.update(e.proxy)}configureProxy(e){a.update(e)}toggleProxy(e){a.update({enabled:e})}getProxyConfig(){return a.get()}_authHeaders(e="application/json"){const t={Authorization:`${this.token}`};return e&&(t["Content-Type"]=e),t}_requestOptions(e={},t="application/json"){return{headers:{...this._authHeaders(t),...e.headers},...e}}async request(e){try{return await e}catch(t){throw console.error("Error en la llamada a la API:",t),t}}async get(e,t={}){const r=`${this.host}${e}`,n=this._requestOptions(t);return this.request(this.http.get(r,n))}async post(e,t={},r={}){const n=`${this.host}${e}`,o=this._requestOptions(r);return this.request(this.http.post(n,t,o))}async put(e,t={},r={}){const n=`${this.host}${e}`,o=this._requestOptions(r);return this.request(this.http.put(n,t,o))}async patch(e,t={},r={}){const n=`${this.host}${e}`,o=this._requestOptions(r);return this.request(this.http.patch(n,t,o))}async delete(e,t={}){const r=`${this.host}${e}`,n=this._requestOptions(t);return this.request(this.http.delete(r,n))}async getWithProxy(e,t,r={}){return this.get(e,{...r,useProxy:!0,proxyConfig:t})}async postWithProxy(e,t={},r,n={}){return this.post(e,t,{...n,useProxy:!0,proxyConfig:r})}async getWithoutProxy(e,t={}){return this.get(e,{...t,useProxy:!1})}}class P extends h{constructor(e,t=""){super(e),this.pathPrefix=t}addPrefix(e){return`${this.pathPrefix}${e}`}async get(e,t={}){return super.get(this.addPrefix(e),t)}async post(e,t={},r={}){return super.post(this.addPrefix(e),t,r)}async put(e,t={},r={}){return super.put(this.addPrefix(e),t,r)}async patch(e,t={},r={}){return super.patch(this.addPrefix(e),t,r)}async delete(e,t={}){return super.delete(this.addPrefix(e),t)}}class I extends h{constructor(e){super(e),this.longPollingActive=!1,this.longPollingAbortController=null,this.retryCount=0,this.longPollingConfig=null}startLongPolling(e){if(this.longPollingActive){console.warn("[LongPolling] Ya hay una sesión de long polling activa");return}this.longPollingConfig={timeout:3e4,retryDelay:5e3,maxRetries:5,...e},this.longPollingActive=!0,this.retryCount=0,this._performLongPoll()}stopLongPolling(){this.longPollingActive=!1,this.longPollingAbortController&&(this.longPollingAbortController.abort(),this.longPollingAbortController=null),this.retryCount=0,console.log("[LongPolling] Long polling detenido")}isLongPollingActive(){return this.longPollingActive}async _performLongPoll(){if(!(!this.longPollingActive||!this.longPollingConfig))try{this.longPollingAbortController=new AbortController;const e=setTimeout(()=>{this.longPollingAbortController&&this.longPollingAbortController.abort()},this.longPollingConfig.timeout),t=await this.get(this.longPollingConfig.endpoint,{signal:this.longPollingAbortController.signal});clearTimeout(e),this.retryCount=0,t.success&&t.data&&Array.isArray(t.data)&&t.data.forEach(r=>{this.longPollingConfig?.onNotification&&this.longPollingConfig.onNotification(r)}),this.longPollingActive&&setTimeout(()=>this._performLongPoll(),100)}catch(e){if(e.name==="AbortError")return;console.error("[LongPolling] Error en long polling:",e),this.longPollingConfig?.onError&&this.longPollingConfig.onError(e),this.longPollingActive&&this._shouldRetry()?(this.retryCount++,console.log(`[LongPolling] Reintentando en ${this.longPollingConfig.retryDelay}ms (intento ${this.retryCount})`),this.longPollingConfig?.onReconnect&&this.longPollingConfig.onReconnect(),setTimeout(()=>this._performLongPoll(),this.longPollingConfig.retryDelay)):(console.error("[LongPolling] Máximo de reintentos alcanzado o long polling desactivado"),this.stopLongPolling())}}_shouldRetry(){return this.longPollingConfig?this.longPollingConfig.maxRetries===0||this.retryCount<(this.longPollingConfig.maxRetries||5):!1}startTaskNotifications(e){this.startLongPolling({endpoint:"/api/tasks/notifications",timeout:3e4,retryDelay:5e3,maxRetries:5,onNotification:e,onError:t=>{console.error("[TaskNotifications] Error:",t)},onReconnect:()=>{console.log("[TaskNotifications] Reconectando...")}})}startGeneralNotifications(e){this.startLongPolling({endpoint:"/api/notifications/wait",timeout:25e3,retryDelay:3e3,maxRetries:10,onNotification:e,onError:t=>{console.error("[GeneralNotifications] Error:",t)},onReconnect:()=>{console.log("[GeneralNotifications] Reconectando...")}})}}class T extends h{constructor(e){super(e)}async getVSJava(){return this.get("/java/all")}async findJavaVersion(e){return this.get(`/java/find/${e}`)}async installJava(e){return this.get(`/java/download/${e}`)}async getALLCores(){return this.get("/mc/cores/all")}async getCores(){return this.get("/mc/cores")}async getcoreInfo(e){return this.get(`/mc/cores/${e}`)}async getCoreData(e){return this.get(`/mc/cores/${e}/versions`)}async postNewserver(e){return this.post("/newserver",e)}async getServers(){return this.get("/mc/servers")}async getServerInfo(e){return this.get(`/mc/servermanager/${e}/info`)}async getServerLog(e){return this.get(`/mc/servermanager/${e}/log`)}async getTasks(){return this.get("/tasks")}}const y=["info","status","metrics","logs"],m=["start","stop","restart","kill"],E=["send","command","commands"];function C(s){return y.includes(s)}function A(s){return m.includes(s)}function k(s){return E.includes(s)}class N extends h{constructor(e){super(e)}async getServerData(e,t){if(!C(t))throw new Error(`Invalid read-only action: ${t}. Valid actions are: ${y.join(", ")}`);return this.get(`/mc/servermanager/${e}/${t}`)}async executeServerAction(e,t){if(!A(t))throw new Error(`Invalid server control action: ${t}. Valid actions are: ${m.join(", ")}`);return this.post(`/mc/servermanager/${e}/${t}`,{})}async executeCommandAction(e,t,r){if(!k(t))throw new Error(`Invalid command action: ${t}. Valid actions are: ${E.join(", ")}`);return this.post(`/mc/servermanager/${e}/${t}`,r)}async sendCommandToServer(e,t){if(C(t))return this.getServerData(e,t);if(A(t))return this.executeServerAction(e,t);throw new Error(`Invalid action: ${t}. Valid actions are: ${[...y,...m].join(", ")}`)}async getServerInfo(e){return this.getServerData(e,"info")}async getServerStatus(e){return this.getServerData(e,"status")}async getServerMetrics(e){return this.getServerData(e,"metrics")}async getServerLog(e){return this.getServerData(e,"logs")}async startServer(e){return this.executeServerAction(e,"start")}async stopServer(e){return this.executeServerAction(e,"stop")}async restartServer(e){return this.executeServerAction(e,"restart")}async killServer(e){return this.executeServerAction(e,"kill")}async sendCommand(e,t){return this.executeCommandAction(e,"send",{command:t})}async sendCommands(e,t){return this.executeCommandAction(e,"commands",{commands:t})}async executeCommand(e,t){return this.executeCommandAction(e,"command",{command:t})}}class D extends P{constructor(e){super(e,"/files")}async getFolderInfo(e){return console.log("FName",e),this.get(`/folder-info/${e}`)}async readFileByPath(e){return this.get(`/read-file-by-path/${e}`)}async writeFile(e){return this.post("/write-file",e)}async uploadFiles(e){return this.post("/upload-files",e)}async deleteFile(e,t){const r=t.startsWith("/")?t.substring(1):t;return this.delete(`/deleteFile/${e}/${r}`)}async createFolder(e){return this.post("/create-folder",{directoryname:e})}async renameFile(e,t,r){const n={server:e,path:t,newName:r};return this.put("/rename",n)}async downloadFile(e){const r=`/download/${e.startsWith("/")?e.substring(1):e}`;return this.get(r,{responseType:"blob"})}}class j extends h{constructor(e){super(e)}async getSystemInfo(){return this.get("/hardware/summary")}async getResources(){return this.get("/hardware/resources")}}class _ extends P{constructor(e){super(e,"/extensions")}async getPlugins(e){return this.get(`/plugins/${e}`)}async getMods(e){return this.get(`/mods/${e}`)}async pluginToggle(e,t,r){const n=["enable","disable","delete"];if(!n.includes(r))throw new Error(`Invalid operation: ${r}. Valid operations are: ${n.join(", ")}`);return this.get(`/plugins/${e}/${t}/${r}`)}async ModToggle(e,t,r){const n=["enable","disable","delete"];if(!n.includes(r))throw new Error(`Invalid operation: ${r}. Valid operations are: ${n.join(", ")}`);return this.get(`/mods/${e}/${t}/${r}`)}async uploadFiles(e,t,r){const n=new FormData;return t.forEach(o=>{n.append("files",o)}),this.post(`/upload/${r}/${e}`,n)}async DownloadModorPlugin(e,t,r){const n={server:e,url:t,path:r};return this.post("/download-file",n)}}class U extends P{constructor(e){super(e,"/files/backups")}async getBackups(e){const t=new URLSearchParams;e?.sortBy&&t.append("sortBy",e.sortBy),e?.sortOrder&&t.append("sortOrder",e.sortOrder),e?.filterByServer&&t.append("filterByServer",e.filterByServer);const r=t.toString(),n=r?`/?${r}`:"";return this.get(n)}async createBackup(e){if(!e||!e.serverName)throw new Error("serverName is required");return this.post("",e)}async getBackupInfo(e){if(!e||typeof e!="string")throw new Error("backupName is required");const t=encodeURIComponent(e);return this.get(`/${t}`)}async deleteBackup(e){if(!e||typeof e!="string")throw new Error("backupName is required");const t=encodeURIComponent(e);return this.delete(`/${t}`)}async downloadBackup(e){if(!e||typeof e!="string")throw new Error("backupName is required");const t=encodeURIComponent(e);return this.get(`/${t}/download`,{responseType:"blob"})}async restoreBackup(e){const{backupName:t}=e;if(!t||typeof t!="string")throw new Error("backupName is required");const r=encodeURIComponent(t),{backupName:n,...o}=e;return this.post(`/${r}/restore`,o)}async uploadBackup(e){if(!e||!e.file)throw new Error("file is required");const t=[".zip",".tar",".gz",".tar.gz",".7z",".rar"],r=e.file.name.toLowerCase();if(!t.some(i=>r.endsWith(i)))throw new Error(`Invalid file format. Allowed formats: ${t.join(", ")}`);const o=new FormData;return o.append("file",e.file),e.overwrite!==void 0&&o.append("overwrite",e.overwrite.toString()),this.post("/upload",o,{headers:{Authorization:`${this.token}`}})}}class W extends h{constructor(e){super(e)}async getPeers(){return this.get("/network/peers")}}new I(c);const F=new T(c),B=new N(c),z=new D(c),V=new j(c),H=new _(c),M=new U(c),J=new W(c);export{h as BaseApi,c as apiConfig,M as backupsapi,z as filemanagerapi,J as networkapi,H as pluginsapi,F as serverapi,B as servermanagerapi,V as systemapi};
