const o=window.location.protocol==="https:"?"wss:":"ws:",s=`${o}//${window.location.host}/ws`;class i{constructor(t,e={}){this.url=t,this.ws=null,this.isConnected=!1,this.reconnectAttempts=0,this.config={onOpen:e.onOpen||function(){},onMessage:e.onMessage||function(){},onClose:e.onClose||function(){},onError:e.onError||function(){},autoReconnect:e.autoReconnect!==void 0?e.autoReconnect:!0,reconnectInterval:e.reconnectInterval||5e3,maxReconnectAttempts:e.maxReconnectAttempts!==void 0?e.maxReconnectAttempts:5,debug:e.debug||!1},this.config.debug&&console.log("[WS Client] SimpleWebSocketClient inicializado con URL:",this.url,"y opciones:",this.config)}_log(t,...e){this.config.debug&&console.log(`[WS Client] ${t}`,...e)}connect(t){if(this.config={...this.config,...t},this.ws&&(this.ws.readyState===WebSocket.OPEN||this.ws.readyState===WebSocket.CONNECTING)){this._log("Ya conectado o conectando.");return}this._log("Intentando conectar a:",this.url);try{this.ws=new WebSocket(this.url)}catch(e){this._log("Error al crear instancia de WebSocket:",e),this.config.onError(e),this.config.autoReconnect&&this._handleReconnect();return}this.ws.onopen=e=>{this.isConnected=!0,this.reconnectAttempts=0,this._log("Conexión WebSocket abierta."),this.config.onOpen(e)},this.ws.onmessage=e=>{let n=e.data;try{n=JSON.parse(e.data),this._log("Mensaje recibido (JSON):",n)}catch{this._log("Mensaje recibido (texto plano):",e.data)}this.config.onMessage(n,e)},this.ws.onclose=e=>{this.isConnected=!1,this._log(`Conexión WebSocket cerrada. Código: ${e.code}, Razón: "${e.reason}", ¿Fue limpia?: ${e.wasClean}`),this.config.onClose(e),this.config.autoReconnect&&e.code!==1e3?this._handleReconnect():this.ws=null},this.ws.onerror=e=>{this._log("Error en WebSocket:",e),this.config.onError(e)}}_handleReconnect(){if(this.config.maxReconnectAttempts>0&&this.reconnectAttempts>=this.config.maxReconnectAttempts){this._log(`Máximo de ${this.config.maxReconnectAttempts} intentos de reconexión alcanzado. Deteniendo.`),this.ws=null;return}this.reconnectAttempts++,this._log(`Intentando reconectar en ${this.config.reconnectInterval/1e3}s... (Intento ${this.reconnectAttempts})`),this.ws&&(this.ws.onopen=null,this.ws.onmessage=null,this.ws.onclose=null,this.ws.onerror=null,this.ws.readyState!==WebSocket.CLOSED&&this.ws.close(),this.ws=null),setTimeout(()=>{this.connect()},this.config.reconnectInterval)}send(t){if(!this.ws||this.ws.readyState!==WebSocket.OPEN)return this._log("No se puede enviar mensaje: WebSocket no conectado o no abierto."),!1;try{const e=typeof t=="string"?t:JSON.stringify(t);return this.ws.send(e),this._log("Mensaje enviado:",e),!0}catch(e){return this._log("Error al enviar mensaje:",e),this.config.onError(e),!1}}close(t=1e3,e="Cierre manual por cliente"){if(!this.ws){this._log("No hay conexión WebSocket para cerrar.");return}this._log(`Cerrando conexión WebSocket con código ${t} y razón "${e}"`),this.config.autoReconnect=!1,this.ws.close(t,e)}isOpen(){return this.ws&&this.ws.readyState===WebSocket.OPEN}}const a=new i(s);export{a as w};
